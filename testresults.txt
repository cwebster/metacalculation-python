============================= test session starts ==============================
platform darwin -- Python 3.9.6, pytest-8.4.0, pluggy-1.6.0 -- /Users/craigwebster/metacalculation-service/venv/bin/python3
cachedir: .pytest_cache
rootdir: /Users/craigwebster/metacalculation-service
configfile: pytest.ini
testpaths: tests
plugins: anyio-4.9.0, asyncio-1.0.0
asyncio: mode=strict, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function
collecting ... collected 4 items

tests/test_biological_variation.py::test_compare_many_random_datasets_with_summary 
Randomized test summary: 17 passed, 3 failed.
Failures:
#6 Range_lower: 17.00043848807498 != 17.2825 (n=11)
#12 Range_lower: 14.68105149722933 != 14.4128 (n=14)
#13 Range_upper: 21.8841339178937 != 22.13 (n=18)
FAILED
tests/test_hello.py::test_hello PASSED
tests/test_metacalculation_valid_csv.py::test_metacalculation_valid_csv PASSED
tests/test_metacalculation_valid_csv.py::test_metacalculation_invalid_csv Error in /metacalculation: 'Include'
PASSED

=================================== FAILURES ===================================
________________ test_compare_many_random_datasets_with_summary ________________

    @pytest.mark.asyncio
    async def test_compare_many_random_datasets_with_summary():
        headers = {"Content-Type": "text/plain"}
        total = 20
        failures = []
        random.seed(42)  # Set seed for reproducibility
        for i in range(total):
            n = random.randint(1, 20)
            CSV_DATA = make_csv(n)
            async with httpx.AsyncClient(timeout=10) as client:  # Add timeout
                local_resp = await client.post(LOCAL_API_URL, content=CSV_DATA, headers=headers)
                assert local_resp.status_code == 200
                local_json = local_resp.json()
    
                biovar_resp = await client.post(BIOVAR_API_URL, content=CSV_DATA, headers=headers)
                assert biovar_resp.status_code == 200
                biovar_json = biovar_resp.json()
    
            for key in ["W.Median", "Range_lower", "Range_upper"]:
                local_val = extract_scalar(local_json.get(key))
                biovar_val = extract_scalar(biovar_json.get(key))
                if local_val is None or biovar_val is None:
                    if local_val != biovar_val:
                        failures.append(f"#{i} {key}: {local_val} != {biovar_val} (n={n})")
                else:
                    if not math.isclose(local_val, biovar_val, rel_tol=1e-2, abs_tol=0.02):
                        failures.append(f"#{i} {key}: {local_val} != {biovar_val} (n={n})")
    
            local_n = extract_scalar(local_json.get("N"))
            biovar_n = extract_scalar(biovar_json.get("N"))
            if local_n != biovar_n:
                failures.append(f"#{i} N: {local_n} != {biovar_n} (n={n})")
    
        print(f"\nRandomized test summary: {total - len(failures)} passed, {len(failures)} failed.")
        if failures:
            print("Failures:")
            for fail in failures:
                print(fail)
>       assert not failures, f"{len(failures)} failures out of {total} tests."
E       AssertionError: 3 failures out of 20 tests.
E       assert not ['#6 Range_lower: 17.00043848807498 != 17.2825 (n=11)', '#12 Range_lower: 14.68105149722933 != 14.4128 (n=14)', '#13 Range_upper: 21.8841339178937 != 22.13 (n=18)']

tests/test_biological_variation.py:60: AssertionError
------------------------------ Captured log call -------------------------------
INFO     httpx:_client.py:1740 HTTP Request: POST http://localhost:8081/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST https://r.biologicalvariation.eu/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST http://localhost:8081/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST https://r.biologicalvariation.eu/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST http://localhost:8081/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST https://r.biologicalvariation.eu/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST http://localhost:8081/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST https://r.biologicalvariation.eu/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST http://localhost:8081/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST https://r.biologicalvariation.eu/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST http://localhost:8081/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST https://r.biologicalvariation.eu/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST http://localhost:8081/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST https://r.biologicalvariation.eu/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST http://localhost:8081/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST https://r.biologicalvariation.eu/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST http://localhost:8081/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST https://r.biologicalvariation.eu/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST http://localhost:8081/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST https://r.biologicalvariation.eu/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST http://localhost:8081/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST https://r.biologicalvariation.eu/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST http://localhost:8081/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST https://r.biologicalvariation.eu/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST http://localhost:8081/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST https://r.biologicalvariation.eu/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST http://localhost:8081/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST https://r.biologicalvariation.eu/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST http://localhost:8081/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST https://r.biologicalvariation.eu/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST http://localhost:8081/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST https://r.biologicalvariation.eu/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST http://localhost:8081/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST https://r.biologicalvariation.eu/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST http://localhost:8081/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST https://r.biologicalvariation.eu/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST http://localhost:8081/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST https://r.biologicalvariation.eu/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST http://localhost:8081/metacalculation "HTTP/1.1 200 OK"
INFO     httpx:_client.py:1740 HTTP Request: POST https://r.biologicalvariation.eu/metacalculation "HTTP/1.1 200 OK"
=============================== warnings summary ===============================
tests/test_metacalculation_valid_csv.py::test_metacalculation_valid_csv
  /Users/craigwebster/metacalculation-service/app/core.py:91: FutureWarning: DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.
    trunc = grouped.apply(agg_fn).reset_index()

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED tests/test_biological_variation.py::test_compare_many_random_datasets_with_summary - AssertionError: 3 failures out of 20 tests.
assert not ['#6 Range_lower: 17.00043848807498 != 17.2825 (n=11)', '#12 Range_lower: 14.68105149722933 != 14.4128 (n=14)', '#13 Range_upper: 21.8841339178937 != 22.13 (n=18)']
==================== 1 failed, 3 passed, 1 warning in 8.46s ====================
